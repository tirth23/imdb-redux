import { createSlice } from "@reduxjs/toolkit";

const counterSlice = createSlice({
	/* This gives the slice a name. The name is used to identify the slice and its actions */
	name: "counter",

	/* initial state of the slice. The state is an object. when the application starts, the counter value is 0 */
	initialState: { value: 0 },

	/* This is an object that contains reducer functions. Reducers define how the state should change in response to actions */
	reducers: {
		/* This is a action creator reducer function that increases the value in the state by 1 
    When you call these functions, they return action objects that can be dispatched to the Redux store
    */
		increment(state) {
			state.value += 1; // Immer.js
		},
		decrement(state) {
			state.value -= 1;
		},
	},
});

/* This line exports the action creators increment and decrement that were generated by createSlice. By exporting these actions, 
other parts of your application can dispatch these actions to change the state */
export const { increment, decrement } = counterSlice.actions;

/* exports the reducer function created by createSlice. The reducer is what actually updates the state when
actions are dispatched. By exporting the reducer, it can be used in your Redux store configuration. */
export default counterSlice.reducer;
